apiVersion: v1
kind: Secret
metadata:
  name: gemini-api-secret
  namespace: ai-agents
  labels:
    app.kubernetes.io/name: agentic-microservices
    app.kubernetes.io/component: ai-agents
type: Opaque
data:
  # Base64 encoded Gemini API key - replace with actual key
  # To encode: echo -n "your-api-key" | base64
  GEMINI_API_KEY: "eW91ci1nZW1pbmktYXBpLWtleQ=="
---
apiVersion: v1
kind: Secret
metadata:
  name: mcp-auth-secret
  namespace: integration
  labels:
    app.kubernetes.io/name: agentic-microservices
    app.kubernetes.io/component: integration
type: Opaque
data:
  # Base64 encoded authentication tokens for MCP integration
  # To encode: echo -n "your-token" | base64
  USER_SERVICE_TOKEN: "dXNlci1zZXJ2aWNlLXRva2Vu"
  TRANSACTION_SERVICE_TOKEN: "dHJhbnNhY3Rpb24tc2VydmljZS10b2tlbg=="
  PRODUCT_SERVICE_TOKEN: "cHJvZHVjdC1zZXJ2aWNlLXRva2Vu"
  ORDER_SERVICE_TOKEN: "b3JkZXItc2VydmljZS10b2tlbg=="
---
apiVersion: v1
kind: Secret
metadata:
  name: a2a-auth-secret
  namespace: integration
  labels:
    app.kubernetes.io/name: agentic-microservices
    app.kubernetes.io/component: integration
type: Opaque
data:
  # Base64 encoded A2A communication secrets
  # To encode: echo -n "your-secret" | base64
  A2A_ENCRYPTION_KEY: "YTJhLWVuY3J5cHRpb24ta2V5"
  A2A_SIGNING_KEY: "YTJhLXNpZ25pbmcta2V5"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-auth-secret
  namespace: integration
  labels:
    app.kubernetes.io/name: agentic-microservices
    app.kubernetes.io/component: integration
type: Opaque
data:
  # Base64 encoded Redis password
  # To encode: echo -n "your-redis-password" | base64
  REDIS_PASSWORD: "cmVkaXMtcGFzc3dvcmQ="