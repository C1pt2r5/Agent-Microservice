{
  "name": "agentic-microservices",
  "version": "1.0.0",
  "description": "AI-enhanced microservice system with intelligent agents on GKE",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "dev": "ts-node src/index.ts",
    "start:chatbot": "ts-node src/agents/chatbot/index.ts",
    "start:fraud-detection": "ts-node src/agents/fraud-detection/index.ts",
    "start:recommendation": "ts-node src/agents/recommendation/index.ts",
    "gateway": "ts-node src/integration/mcp/gateway-cli.ts",
    "gateway:dev": "NODE_ENV=development ts-node src/integration/mcp/gateway-cli.ts",
    "hub": "ts-node src/integration/a2a/hub-cli.ts",
    "hub:dev": "NODE_ENV=development ts-node src/integration/a2a/hub-cli.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:unit": "jest --testPathPattern=unit",
    "test:e2e": "jest --testPathPattern=e2e --testTimeout=300000",
    "test:performance": "jest --testPathPattern=performance --testTimeout=600000",
    "test:fraud-scenarios": "jest --testPathPattern=fraud --testTimeout=300000",
    "test:recommendation-accuracy": "jest --testPathPattern=recommendation --testTimeout=300000",
    "test:integration": "jest tests/integration --testTimeout=300000",
    "test:integration:agent-communication": "jest tests/integration/example-tests.ts -t 'agent-communication'",
    "test:integration:end-to-end": "jest tests/integration/example-tests.ts -t 'end-to-end'",
    "test:integration:performance": "jest tests/integration/example-tests.ts -t 'performance'",
    "test:integration:all": "ts-node tests/integration/example-tests.ts",
    "test:k8s": "jest k8s/validate-manifests.test.ts",
    "test:k8s:deployments": "jest k8s/deployment-validation.test.ts",
    "validate:k8s": "npm run test:k8s && npm run test:k8s:deployments",
    "smoke:k8s": "powershell -ExecutionPolicy Bypass -File k8s/smoke-tests.ps1",
    "docker:build": "powershell -ExecutionPolicy Bypass -File docker/build-agents.ps1",
    "docker:build:push": "powershell -ExecutionPolicy Bypass -File docker/build-agents.ps1 -Push",
    "docker:test": "jest docker/test-images.test.ts",
    "docker:compose:up": "docker-compose -f docker/docker-compose.yml up -d",
    "docker:compose:down": "docker-compose -f docker/docker-compose.yml down",
    "docker:compose:logs": "docker-compose -f docker/docker-compose.yml logs -f",
    "config:validate": "ts-node scripts/validate-config.ts",
    "config:validate:dev": "ts-node scripts/validate-config.ts --environment development",
    "config:validate:staging": "ts-node scripts/validate-config.ts --environment staging",
    "config:validate:prod": "ts-node scripts/validate-config.ts --environment production",
    "config:validate:all": "ts-node scripts/validate-config.ts --check-consistency",
    "config:deploy": "powershell -ExecutionPolicy Bypass -File scripts/config-deploy.ps1",
    "deploy:gke": "powershell -ExecutionPolicy Bypass -File scripts/deploy-gke.ps1",
    "deploy:gke:dev": "powershell -ExecutionPolicy Bypass -File scripts/deploy-gke.ps1 -Environment development",
    "deploy:gke:staging": "powershell -ExecutionPolicy Bypass -File scripts/deploy-gke.ps1 -Environment staging",
    "deploy:gke:prod": "powershell -ExecutionPolicy Bypass -File scripts/deploy-gke.ps1 -Environment production",
    "monitoring:setup": "powershell -ExecutionPolicy Bypass -File scripts/setup-monitoring.ps1",
    "backup:create": "powershell -ExecutionPolicy Bypass -File scripts/backup-restore.ps1 -Operation backup",
    "backup:restore": "powershell -ExecutionPolicy Bypass -File scripts/backup-restore.ps1 -Operation restore",
    "backup:list": "powershell -ExecutionPolicy Bypass -File scripts/backup-restore.ps1 -Operation list",
    "backup:cleanup": "powershell -ExecutionPolicy Bypass -File scripts/backup-restore.ps1 -Operation cleanup",
    "lint": "eslint src/**/*.ts",
    "format": "prettier --write src/**/*.ts"
  },
  "keywords": ["microservices", "ai", "agents", "gke", "kubernetes"],
  "author": "Agentic Microservices Team",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/jest": "^29.0.0",
    "@types/express": "^4.17.0",
    "@types/ws": "^8.5.0",
    "@types/supertest": "^2.0.0",
    "@types/js-yaml": "^4.0.0",
    "@faker-js/faker": "^8.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.0.0",
    "jest": "^29.0.0",
    "js-yaml": "^4.1.0",
    "prettier": "^3.0.0",
    "supertest": "^6.3.0",
    "ts-jest": "^29.0.0",
    "ts-node": "^10.0.0",
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "express": "^4.18.0",
    "ws": "^8.14.0",
    "axios": "^1.6.0",
    "redis": "^4.6.0",
    "prom-client": "^15.0.0",
    "winston": "^3.11.0",
    "joi": "^17.11.0",
    "uuid": "^9.0.0",
    "dotenv": "^16.3.0",
    "@google/generative-ai": "^0.2.1"
  }
}